

# 注意
# map オブジェクトを扱うときに注意すること
# map オブジェクトはリストと扱いが異なる場合があるので、注意が必要です。
# list() を使って、リストに変換することで解決します。

# リストと同様に扱えるケースとして、for 文があります5。

# >>> A = ['1', '2', '3']
# >>> for x in map(int, A):
# ...     print(x ** 3)
# ...
# 1
# 8
# 27
# リストと扱いが異なる点として例えば、インデックス指定ができません6。

# >>> A = map(int, input().split())
# 5 6 8 10
# >>> A[0]
# Traceback (most recent call last):
#   File "<stdin>", line 1, in <module>
# TypeError: 'map' object is not subscriptable

# また、一度iterateしてしまうと、再利用ができません。

# >>> A = map(int, '5 6 8 10'.split())
# >>> B = list(A)
# >>> print(B)
# [5, 6, 8, 10]
# >>> C = list(A)
# >>> print(C)
# []







# 「1行に1つ」 : str
# ==========================================================================================================================

# 形式
# xxxx

# Sample
# dreamerer

# コード
S = input()  # type(S) => <class 'str'>

# 出力
# dreamerer

# 「1行に1つ」 : int
# ==========================================================================================================================

# 形式
# 1200

# Sample
# 1200

# コード
N = int(input())  # type(N) => <class 'int'>

# 出力
# 1200

# 「1行に1つ」 : float
# ==========================================================================================================================

# 形式
# 3.14

# Sample
# 3.14

# コード
x = float(input())  # type(x) => <class 'float'>

# 出力
# 3.14









# 1行 : 複数要素 : カンマ区切り :int
# ==========================================================================================================================

# 形式
# 1564, 64516, 81851

# コード
l = list(map(int ,input().split(',')))


#  「1行に複数」 : str
# ==========================================================================================================================

# 形式
# x, x, x

# Sample
# 1,2,3

# コード
l = input().split(',')

# 出力
# ['1', '2', '3']










# 「1行に複数」 : str
# ==========================================================================================================================

# 形式: 空白区切りで３つの文字列の場合
# xxxxxxx yyy zzzzz

# Sample
# atcoder beginner contest

S = input().split() # type(S) => <class 'list'>       

# 出力
# ['atcoder', 'beginner', 'contest']










# 「1行に複数」を「別々で」 : int
# ==========================================================================================================================

# 形式
# A B

# Sample
# 5 10

# コード１
A, B = map(int, input().split())  # list() を使っても構いません

# コード2
AB = input().split()
A, B = int(AB[0]), int(AB[1])


# 出力(A)
# 5
# 出力(B)
# 10







# 複数の整数
# ==========================================================================================================================
# 変数の前に * をつけます。

# 形式
# N
# d1
# ・
# ・
# ・
# dN

# Sample
# 4
# 10
# 8
# 8
# 6

# コード
N, *d = map(int, open(0).read().split())  

# 出力(N)
# 4

# 出力(d)
# [10,8,8,6]


# 複数の整数 (N無し)
# ==========================================================================================================================
# カンマ忘れに注意です。

# 形式
# d1
# ・
# ・
# ・
# dN

# Sample
# 4
# 10
# 8
# 8
# 6

*X, = map(int, open(0).read().split())  # カンマ(,)が必要

# 出力(print(X[0]))
# 4
# 出力(print(X[1:]))
# [10, 8, 8, 6]














# 「1行に複数」を「リストとして」 : int
# ==========================================================================================================================

# 形式 => N が A の要素数
# N
# A1 A2 … AN

# Sample
# 4
# 5 6 8 10

# コード1 listとmap
N = int(input()) # type(N) => <class 'int'>
A = list(map(int, input().split())) # type(A) => <class 'list'>


# コード2 内包表記
N = int(input()) # type(N) => <class 'int'>
A = [int(x) for x in input().split()] # type(A) => <class 'list'>



# コード３　独自
N,*A=map(int, open(0).read().split()) # => Aを使いたいときはそのまま print(A) として使う

# 出力(N)
# 4
# 出力(A)
# [5,6,8,10]



#  「1行に複数」を「集合として」 : 集合(set())
# ==========================================================================================================================

# 形式 => N が A の要素数
# N
# A1 A2 … AN

# Sample
# 4
# 5 6 8 10

# コード1 map()を使う
N = int(input())
A = set(map(int, input().split()))  # type(A) => <class 'set'>


# コード2 リスト内包表記
N = int(input())
A = {int(x) for x in input().split()}

# A = list(A)
# これでリストとしても扱える。

# 出力(N)
# 4
# 出力(A)
# {2, 18, 18, 20}






# 「1行に複数」を「集合として」かつ「ソートしておきたい」 : int
# ==========================================================================================================================

# 形式 => N が A の要素数
# N
# A1 A2 … AN

# Sample
# 4
# 5 6 8 10

# コード1 map()を使う
N = int(input()) # type(N) => <class 'int'>
A = sorted(map(int, input().split()))  # type(A) => <class 'list'>


# コード2 リスト内包表記
N = int(input())
A = sorted([int(x) for x in input().split()])


# コード3 []の省略形
N = int(input())
A = sorted(int(x) for x in input().split())


# コード４ 独自
N,*A=map(int,open(0).read().split())
for i in range(1,N+1):A[:i]=sorted(A[:i])
print(A)


# コード４ 独自 (途中経過見れるver)
N,*A=map(int,open(0).read().split())
for i in range(1,N+1):A[:i]=sorted(A[:i]);print(*A) #=> pythonの「 ; 」は区切りの意味。

# 出力(N)
# 4
# 出力(A)
# [5, 6, 8, 10]





# 「複数行に1つ」を「リストとして」- 行列、グリッド : int
# ==========================================================================================================================

# 形式 => H が S の要素数
# H W
# S1
# ・
# ・
# ・
# SH

# Sample
# 5 200
# 100
# 100
# 500
# 500
# 500

# コード例1 : 配列を用意して、追加していく
H, W = map(int, input().split())
S = []
for _ in range(H):
    S.append(input())  # S += [input()] とも書ける
    

# コード例2 : リスト内包表記
H, W = map(int, input().split())
S = [input() for _ in range(H)]

# コード例3 : 
H, W = map(int, input().split())
S = [input() for _ in [0] * H]

# 出力(H)
# 5
# 出力(W)
# 200
# 出力(S)
# [100,100,500,500,500]


    
# 最初にすべて読み込む必要がある場合 - 事前に各リストを用意しておく : int
# ==========================================================================================================================

# 形式 => N が t の要素数
# N
# t1 x1 y1
# t2 x2 y2
# ・
# ・
# ・
# tN xN yN

# Sample
# 6
# 3 1 2
# 4 2 2
# 5 4 7
# 9 3 8
# 1 9 8
# 7 7 2

# コード
N = int(input())
t = [0] * N
x = [0] * N
y = [0] * N
for i in range(N):
    t[i], x[i], y[i] = map(int, input().split())


# 出力(N)
# 6
# 出力(t)
# [3,4,5,9,1,7]
# 出力(x)
# [1,2,4,3,9,7]
# 出力(y)
# [2,2,7,8,8,2]



# 1行ずつ処理 - for 文を使うだけ : int
# ==========================================================================================================================

# 形式 => M が a の要素数
# N M
# a1 b1
# ・
# ・
# ・
# aM bM

# Sample
# 4 6 => 縦の要素数(a)が6個
# 1 2
# 2 3
# 1 4
# 1 2
# 2 3
# 15 4

# コード
N, M = map(int, input().split())
for _ in range(M):
    a, b = map(int, input().split())
    # 処理
    
    # 出力(a)
    # 1
    # 2
    # 1
    # 1
    # 2
    # 1
    # 出力(b)
    # 2
    # 3
    # 4
    # 2
    # 3
    # 4
# ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ 
# a と b に値を代入しているわけではないので、forの外で、print(a)としたら、最後の要素(今回では15)になります。
# a = [1,2,1,1,2,15]としたい場合は、事前にリストを作ってそこに代入する方法をとってください。(サンプル有)
# ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ ※ 
# 出力(N)
# 4
# 出力(M)
# 6


    
# 特定の文字列を読み込むまで読み込み続ける : str   
# ==========================================================================================================================

# 形式 => "-1"が入力の終わりを示す場合
# a1
# a2
# ・
# ・
# ・
# −1


# Sample
# 4
# 1
# 2
# 1
# -1
# 2
# 1


# コード例
for e in iter(input, '-1'):  # 「'-1'」の部分を問題に応じて変更します
    # 処理
    print(e)
    
    # 出力(a)
    # 4
    # 1
    # 2
    # 1
    # -1 => 今回は-1まで実行だったので、-1が出たので処理が終了
    
    
# 特定の文字列を読み込むまで読み込み続ける : int   
# ==========================================================================================================================

# 形式 => "-1"が入力の終わりを示す場合
# a1
# a2
# ・
# ・
# ・
# 5


# Sample
# 4
# 1
# 2
# 1
# 5
# 2
# 1


# コード例
for e in iter(input, '5'):  # 「'5'」の部分を問題に応じて変更します。inputはintもからなずstrとして扱われます。
    # 処理
    print(e)
    
    # 出力(a)
    # 4
    # 1
    # 2
    # 1
    # 5 => 今回は-1まで実行だったので、-1が出たので処理が終了
  
  
  

# 「決まった数」、「決ってない縦横」 : int
# ==========================================================================================================================

# 形式1
# 10 20 50 40

# 形式2
# 10
# 20
# 50
# 40

# コード例
A, B, C, X = map(int, open(0).read().split())

# 出力(A)
# 10
# 出力(B)
# 20
# 出力(C)
# 50
# 出力(D)
# 30

# 形式1 にも 形式2 にも対応することができます。




