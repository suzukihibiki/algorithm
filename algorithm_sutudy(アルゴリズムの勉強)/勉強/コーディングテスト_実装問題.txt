








コーディングテストの特徴
・業務指向な実装問題

・詳細な仕様があり、それを元に実装する
作ってほしいいアプリの詳細があって、それを実装する。

<例>
・タクシーメーターを作れ{
    ・距離メーター
    ・低速走行時間メーター
    ・運賃メーター
}
の三種類のメーターが搭載されている

・料金方法が複数ある{
    ・初乗り運賃
    ・近距離運賃
    ・長距離運賃
    ・低速走行運賃
    ・深夜料金
    ・ピークタイム料金
}

<問題のイメージ>
・生活で触れる機会が多い仕組みが題材
・なんとなく知っている一般的な題材が多い。
・知ってるつもりでも読み飛ばすと治部は細かい概念が現実と異なるケースもある
・単純な計算処理だが、複数の処理が求められ複雑になる（これがアルゴリズム問題と主な違い。）
・制限時間がかなりシビア（1問当たり２,３時間）


<エラー処理もちゃんとしたい>
・例えば実際のサービスだったらどうなるかを考える
・決済済みのサービスだと1円のズレも大問題になるので。{
    小数点処理をちゃんとするなど。
}
・仕様をちゃんと読み、正しく処理を書く。


<仕様をよく読むことが大事>
・必要な条件はある程度わかりやすくまとめる
・仕様が長いので情報が分散している
・裏のわざと点数を引きに行くテストケースがあったりもするので、終わってからもちゃんと仕様を読む。


